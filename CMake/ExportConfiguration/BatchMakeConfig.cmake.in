#-----------------------------------------------------------------------------
#
# BatchMakeConfig.cmake - CMake configuration file for external projects.
#
# This file is configured by BatchMake and used by the UseBatchMake.cmake
# module to load BatchMake's settings for an external project.

# The BatchMake version number.
set(BatchMake_VERSION_MAJOR "@BatchMake_VERSION_MAJOR@")
set(BatchMake_VERSION_MINOR "@BatchMake_VERSION_MINOR@")
set(BatchMake_VERSION_PATCH "@BatchMake_VERSION_PATCH@")

# The libraries.
set(BatchMake_LIBRARIES "@BatchMake_LIBRARIES@")

# The CMake macros dir.
set(BatchMake_CMAKE_DIR "@BatchMake_CMAKE_DIR_CONFIG@")

# The configuration options.
set(BatchMake_BUILD_SHARED_LIBS "@BUILD_SHARED_LIBS@")
set(BatchMake_DASHBOARD_SUPPORT "@DASHBOARD_SUPPORT@")
set(BatchMake_GRID_SUPPORT "@GRID_SUPPORT@")

# The C and C++ flags added to the cmake-configured flags.
set(BatchMake_REQUIRED_C_FLAGS
  "@BatchMake_REQUIRED_C_FLAGS@")
set(BatchMake_REQUIRED_CXX_FLAGS
  "@BatchMake_REQUIRED_CXX_FLAGS@")
set(BatchMake_REQUIRED_EXE_LINKER_FLAGS
  "@BatchMake_REQUIRED_EXE_LINKER_FLAGS@")
set(BatchMake_REQUIRED_SHARED_LINKER_FLAGS
  "@BatchMake_REQUIRED_SHARED_LINKER_FLAGS@")
set(BatchMake_REQUIRED_MODULE_LINKER_FLAGS
  "@BatchMake_REQUIRED_MODULE_LINKER_FLAGS@")

# The "use" file.
set(BatchMake_USE_FILE "@BatchMake_USE_FILE_CONFIG@")

# The build settings file.
set(BatchMake_BUILD_SETTINGS_FILE "@BatchMake_BUILD_SETTINGS_FILE_CONFIG@")

# The library directories.
set(BatchMake_LIBRARY_DIRS "@BatchMake_LIBRARY_DIRS_CONFIG@")

# The runtime directories.
# Note that if BatchMake_CONFIGURATION_TYPES is set (see below) then
# these directories will be the parent directories under which there will
# be a directory of runtime binaries for each configuration type.
set(BatchMake_RUNTIME_DIRS "@BatchMake_RUNTIME_DIRS_CONFIG@")

# The location of .bmm files
set(BatchMake_APPLICATIONS_DIRS "@BatchMake_APPLICATIONS_DIRS_CONFIG@")

# The include directories.
set(BatchMake_INCLUDE_DIRS "@BatchMake_INCLUDE_DIRS_CONFIG@")

# The library dependencies file.
if(NOT BatchMake_NO_LIBRARY_DEPENDS AND
    EXISTS "@BatchMake_LIBRARY_DEPENDS_FILE@")
  include("@BatchMake_LIBRARY_DEPENDS_FILE@")
endif(NOT BatchMake_NO_LIBRARY_DEPENDS AND
  EXISTS "@BatchMake_LIBRARY_DEPENDS_FILE@")

# The ITK options.
set(BatchMake_ITK_DIR "@BatchMake_ITK_DIR_CONFIG@")

# The FLTK options.
set(BatchMake_USE_FLTK "@USE_FLTK@")
set(BatchMake_FLTK_DIR "@BatchMake_FLTK_DIR_CONFIG@")

# Utilities
set(BatchMake_GET_CPU_INFO_EXE "@BatchMake_GET_CPU_INFO_EXE_CONFIG@")
set(BatchMake_GET_CPU_SPEED_EXE "@BatchMake_GET_CPU_SPEED_EXE_CONFIG@")
set(BatchMake_GET_MEMORY_INFO_EXE "@BatchMake_GET_MEMORY_INFO_EXE_CONFIG@")
set(BatchMake_CONDOR_WATCHER_TOOL_EXE
    "@BatchMake_CONDOR_WATCHER_TOOL_EXE_CONFIG@")
set(BatchMake_GRID_SEND_EXE "@BatchMake_GRID_SEND_EXE_CONFIG@")
set(BatchMake_GRID_STORE_EXE "@BatchMake_GRID_STORE_EXE_CONFIG@")
set(BatchMake_SLICE_EXTRACTOR_EXE "@BatchMake_SLICE_EXTRACTOR_EXE_CONFIG@")

# An install tree always provides one build configuration.
# A build tree may provide either one or multiple build
# configurations depending on the CMake generator used. Since
# this project can be used either from a build tree or an install tree it
# is useful for outside projects to know the configurations available.
# If this BatchMakeConfig.cmake is in an install tree
# BatchMake_CONFIGURATION_TYPES will be empty and BatchMake_BUILD_TYPE
# will be set to the value of CMAKE_BUILD_TYPE used to build
# BatchMake. If BatchMakeConfig.cmake is in a build tree
# then BatchMake_CONFIGURATION_TYPES and BatchMake_BUILD_TYPE will
# have values matching CMAKE_CONFIGURATION_TYPES and CMAKE_BUILD_TYPE
# for that build tree (only one will ever be set).
set(BatchMake_CONFIGURATION_TYPES @BatchMake_CONFIGURATION_TYPES_CONFIG@)
set(BatchMake_BUILD_TYPE @BatchMake_BUILD_TYPE_CONFIG@)
